version: "3.7"

services:
  nja_server:
    build: ./nso-core
    image: nja_server:0.1
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        monitor: 60s
        max_failure_ratio: 0.3
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASS=01676940253
      - DB_PORT=3306
      - DB_DATABASE=nja
      - DEBUG=false
      - REDIS_CACHE_DEFAULT=redis://redis:6379/1
      - TOPUP_CARD_API=https://api.doicard68.com/api/card-auto
      - TOPUP_CARD_API_KEY=C806331F-CC2A-4EAF-9148-B755DE567333
      - NSO_MS_API=http://45.77.129.249:443/api/topup_card
    volumes:
      - ./nso-core/res:/app/res
      - ./nso-core/black_list_ips.txt:/app/log/black_list_ips.txt
    ports:
      - 14444:14444
      # - 5000:5000 # For debug
    depends_on:
      - mysql
  nginx:
    restart: always
    image: ninjaschool/nginx:0.1
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - ./nso-core/res:/home/app/res
    ports:
      - 443:80
    depends_on:
      - nja_admin
      - php_myadmin
      - portainer

  redis:
    image: redis:4.0.11
    environment:
      - "affinity:image==redis"
    volumes:
      - local_redis_data:/data

  nja_admin:
    restart: always
    build: ./nso-admin
    image: nja_admin:0.1
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        monitor: 60s
        max_failure_ratio: 0.3
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASS=01676940253
      - DB_PORT=3306
      - DB_DATABASE=nja
    depends_on:
      - mysql
      - redis
    volumes:
      - static_volume:/code/static

  mysql:
    restart: always
    image: mysql:5.7.20
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max_allowed_packet=1073741824
    volumes:
      - local_mysql_data:/var/lib/mysql
      - ./mysql/backups:/backups
      - ./mysql/restores:/restores
    environment:
      MYSQL_ROOT_PASSWORD: 01676940253
      MYSQL_PASSWORD: 01676940253
      MYSQL_USER: root
      MYSQL_DATABASE: nja

  mysql-cron-backup:
    image: fradelg/mysql-cron-backup
    depends_on:
      - mysql
    volumes:
      - ./mysql/backups:/backup
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASS=01676940253
      - MYSQL_DATABASE=nja
      - MAX_BACKUPS=30
      - INIT_BACKUP=0
      # Every 30 minutes
      - CRON_TIME=0 * * * *
      # Make it small
      - GZIP_LEVEL=9
      - TZ="Asia/Ho_Chi_Minh"
    restart: unless-stopped

  php_myadmin:
    image: phpmyadmin/phpmyadmin:5.1.3
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: 01676940253
    ports:
      - 18085:80
    depends_on:
      - mysql

  agent:
    image: portainer/agent:2.11.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - default
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.9.3
    # command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9000:9000"
      - "8000:8000"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - default
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

networks:
  default:
    driver: overlay
    attachable: true
volumes:
  local_mysql_data: null
  static_volume: null
  local_redis_data: null
  portainer_data: null
